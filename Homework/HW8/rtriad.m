function [rtriad] = rtriad(zfun,rerr,aerr)

%  Adaptive quadrature on a unit triangle for complex integrand
%
%  Dunavent rule with 1, 3, 7, 16, 33, and 61 points
%
%  h-refinement to 5 levels (1, 4, 16, 64, 256 subtriangles)
%
%  no sample point re-use
%
%    zfun(u,v) is the integrand 
%     rerr is the desired relative error
%     aerr is the desired absolute error (should be nonzero to
%          cause the algorithm to terminate if the integrand is
%          converging to zero)
%
%     a. f. peterson  July 26, 2011
%
      global pcell;
      pcell = zeros(4);
      w(6,61) = 0;
      x(6,61) = 0;
      y(6,61) = 0;
%
%     one-point, exactly integrates degree 1
%
       w(1,1)=1.000000000000000;
       x(1,1)=0.333333333333333;
       y(1,1)=0.333333333333333;
%
%     3-point, exactly integrates degree 2
%
       w(2,1)=0.333333333333333;
       w(2,2)=0.333333333333333;
       w(2,3)=0.333333333333333;
       x(2,1)=0.666666666666667;
       x(2,2)=0.166666666666667;
       x(2,3)=0.166666666666667;
       y(2,1)=0.166666666666667;
       y(2,2)=0.166666666666667;
       y(2,3)=0.666666666666667;
%
%     7-point, exactly integrates degree 5
%
       w(3,1)=0.225000000000000;
       w(3,2)=0.132394152788506;
       w(3,3)=0.125939180544827;
       w(3,4)=0.132394152788506;
       w(3,5)=0.125939180544827;
       w(3,6)=0.132394152788506;
       w(3,7)=0.125939180544827;
       x(3,1)=0.333333333333333;
       x(3,2)=0.059715871789770;
       x(3,3)=0.797426985353087;
       x(3,4)=0.470142064105115;
       x(3,5)=0.101286507323456;
       x(3,6)=0.470142064105115;
       x(3,7)=0.101286507323456;
       y(3,1)=0.333333333333333;
       y(3,2)=0.470142064105115;
       y(3,3)=0.101286507323456;
       y(3,4)=0.059715871789770;
       y(3,5)=0.797426985353087;
       y(3,6)=0.470142064105115;
       y(3,7)=0.101286507323456;
%
%    16-point, exactly integrates degree 8
%
       w(4,1)=0.144315607677787;
       w(4,2)=0.095091634267285;
       w(4,3)=0.103217370534718;
       w(4,4)=0.032458497623198;
       w(4,5)=0.027230314174435;
       w(4,6)=0.095091634267285;
       w(4,7)=0.095091634267285;
       w(4,8)=0.103217370534718;
       w(4,9)=0.103217370534718;
       w(4,10)=0.032458497623198;
       w(4,11)=0.032458497623198;
       w(4,12)=0.027230314174435;
       w(4,13)=0.027230314174435;
       w(4,14)=0.027230314174435;
       w(4,15)=0.027230314174435;
       w(4,16)=0.027230314174435;

       x(4,1)=0.333333333333333;
       x(4,2)=0.081414823414554;
       x(4,3)=0.658861384496480;
       x(4,4)=0.898905543365938;
       x(4,5)=0.008394777409958;
       x(4,6)=0.459292588292723;
       x(4,7)=0.459292588292723;
       x(4,8)=0.170569307751760;
       x(4,9)=0.170569307751760;
       x(4,10)=0.050547228317031;
       x(4,11)=0.050547228317031;
       x(4,12)=0.008394777409958;
       x(4,13)=0.263112829634638;
       x(4,14)=0.263112829634638;
       x(4,15)=0.728492392955404;
       x(4,16)=0.728492392955404;

       y(4,1)=0.333333333333333;
       y(4,2)=0.459292588292723;
       y(4,3)=0.170569307751760;
       y(4,4)=0.050547228317031;
       y(4,5)=0.263112829634638;
       y(4,6)=0.081414823414554;
       y(4,7)=0.459292588292723;
       y(4,8)=0.658861384496480;
       y(4,9)=0.170569307751760;
       y(4,10)=0.898905543365938;
       y(4,11)=0.050547228317031;
       y(4,12)=0.728492392955404;
       y(4,13)=0.728492392955404;
       y(4,14)=0.008394777409958;
       y(4,15)=0.008394777409958;
       y(4,16)=0.263112829634638;
%
%     33-point, exactly integrates degree 12
%
       w(5,1)=0.025731066440455;
       w(5,2)=0.043692544538038;
       w(5,3)=0.062858224217885;
       w(5,4)=0.034796112930709;
       w(5,5)=0.006166261051559;
       w(5,6)=0.040371557766381;
       w(5,7)=0.022356773202303;
       w(5,8)=0.017316231108659;
       w(5,9)=0.025731066440455;
       w(5,10)=0.025731066440455;
       w(5,11)=0.043692544538038;
       w(5,12)=0.043692544538038;
       w(5,13)=0.062858224217885;
       w(5,14)=0.062858224217885;
       w(5,15)=0.034796112930709;
       w(5,16)=0.034796112930709;
       w(5,17)=0.006166261051559;
       w(5,18)=0.006166261051559;
       w(5,19)=0.040371557766381;
       w(5,20)=0.040371557766381;
       w(5,21)=0.040371557766381;
       w(5,22)=0.040371557766381;
       w(5,23)=0.040371557766381;
       w(5,24)=0.022356773202303;
       w(5,25)=0.022356773202303;
       w(5,26)=0.022356773202303;
       w(5,27)=0.022356773202303;
       w(5,28)=0.022356773202303;
       w(5,29)=0.017316231108659;
       w(5,30)=0.017316231108659;
       w(5,31)=0.017316231108659;
       w(5,32)=0.017316231108659;
       w(5,33)=0.017316231108659;

       x(5,1)=0.023565220452390;
       x(5,2)=0.120551215411079;
       x(5,3)=0.457579229975768;
       x(5,4)=0.744847708916828;
       x(5,5)=0.957365299093579;
       x(5,6)=0.115343494534698;
       x(5,7)=0.022838332222257;
       x(5,8)=0.025734050548330;
       x(5,9)=0.488217389773805;
       x(5,10)=0.488217389773805;
       x(5,11)=0.439724392294460;
       x(5,12)=0.439724392294460;
       x(5,13)=0.271210385012116;
       x(5,14)=0.271210385012116;
       x(5,15)=0.127576145541586;
       x(5,16)=0.127576145541586;
       x(5,17)=0.021317350453210;
       x(5,18)=0.021317350453210;
       x(5,19)=0.115343494534698;
       x(5,20)=0.275713269685514;
       x(5,21)=0.275713269685514;
       x(5,22)=0.608943235779788;
       x(5,23)=0.608943235779788;
       x(5,24)=0.022838332222257;
       x(5,25)=0.281325580989940;
       x(5,26)=0.281325580989940;
       x(5,27)=0.695836086787803;
       x(5,28)=0.695836086787803;
       x(5,29)=0.025734050548330;
       x(5,30)=0.116251915907597;
       x(5,31)=0.116251915907597;
       x(5,32)=0.858014033544073;
       x(5,33)=0.858014033544073;

       y(5,1)=0.488217389773805;
       y(5,2)=0.439724392294460;
       y(5,3)=0.271210385012116;
       y(5,4)=0.127576145541586;
       y(5,5)=0.021317350453210;
       y(5,6)=0.275713269685514;
       y(5,7)=0.281325580989940;
       y(5,8)=0.116251915907597;
       y(5,9)=0.023565220452390;
       y(5,10)=0.488217389773805;
       y(5,11)=0.120551215411079;
       y(5,12)=0.439724392294460;
       y(5,13)=0.457579229975768;
       y(5,14)=0.271210385012116;
       y(5,15)=0.744847708916828;
       y(5,16)=0.127576145541586;
       y(5,17)=0.957365299093579;
       y(5,18)=0.021317350453210;
       y(5,19)=0.608943235779788;
       y(5,20)=0.115343494534698;
       y(5,21)=0.608943235779788;
       y(5,22)=0.115343494534698;
       y(5,23)=0.275713269685514;
       y(5,24)=0.695836086787803;
       y(5,25)=0.022838332222257;
       y(5,26)=0.695836086787803;
       y(5,27)=0.022838332222257;
       y(5,28)=0.281325580989940;
       y(5,29)=0.858014033544073;
       y(5,30)=0.025734050548330;
       y(5,31)=0.858014033544073;
       y(5,32)=0.025734050548330;
       y(5,33)=0.116251915907597;
%
%    61-point, exactly integrates degree 17
%
       w(6,1)=0.033437199290803;
       w(6,2)=0.005093415440507;
       w(6,3)=0.014670864527638;
       w(6,4)=0.024350878353672;
       w(6,5)=0.031107550868969;
       w(6,6)=0.031257111218620;
       w(6,7)=0.024815654339665;
       w(6,8)=0.014056073070557;
       w(6,9)=0.003194676173779;
       w(6,10)=0.008119655318993;
       w(6,11)=0.026805742283163;
       w(6,12)=0.018459993210822;
       w(6,13)=0.008476868534328;
       w(6,14)=0.018292796770025;
       w(6,15)=0.006665632004165;
       w(6,16)=0.005093415440507;
       w(6,17)=0.005093415440507;
       w(6,18)=0.014670864527638;
       w(6,19)=0.014670864527638;
       w(6,20)=0.024350878353672;
       w(6,21)=0.024350878353672;
       w(6,22)=0.031107550868969;
       w(6,23)=0.031107550868969;
       w(6,24)=0.031257111218620;
       w(6,25)=0.031257111218620;
       w(6,26)=0.024815654339665;
       w(6,27)=0.024815654339665;
       w(6,28)=0.014056073070557;
       w(6,29)=0.014056073070557;
       w(6,30)=0.003194676173779;
       w(6,31)=0.003194676173779;
       w(6,32)=0.008119655318993;
       w(6,33)=0.008119655318993;
       w(6,34)=0.008119655318993;
       w(6,35)=0.008119655318993;
       w(6,36)=0.008119655318993;
       w(6,37)=0.026805742283163;
       w(6,38)=0.026805742283163;
       w(6,39)=0.026805742283163;
       w(6,40)=0.026805742283163;
       w(6,41)=0.026805742283163;
       w(6,42)=0.018459993210822;
       w(6,43)=0.018459993210822;
       w(6,44)=0.018459993210822;
       w(6,45)=0.018459993210822;
       w(6,46)=0.018459993210822;
       w(6,47)=0.008476868534328;
       w(6,48)=0.008476868534328;
       w(6,49)=0.008476868534328;
       w(6,50)=0.008476868534328;
       w(6,51)=0.008476868534328;
       w(6,52)=0.018292796770025;
       w(6,53)=0.018292796770025;
       w(6,54)=0.018292796770025;
       w(6,55)=0.018292796770025;
       w(6,56)=0.018292796770025;
       w(6,57)=0.006665632004165;
       w(6,58)=0.006665632004165;
       w(6,59)=0.006665632004165;
       w(6,60)=0.006665632004165;
       w(6,61)=0.006665632004165;

       x(6,1)=0.333333333333333;
       x(6,2)=0.005658918886452;
       x(6,3)=0.035647354750751;
       x(6,4)=0.099520061958437;
       x(6,5)=0.199467521245206;
       x(6,6)=0.495717464058095;
       x(6,7)=0.675905990683077;
       x(6,8)=0.848248235478508;
       x(6,9)=0.968690546064356;
       x(6,10)=0.010186928826919;
       x(6,11)=0.135440871671036;
       x(6,12)=0.054423924290583;
       x(6,13)=0.012868560833637;
       x(6,14)=0.067165782413524;
       x(6,15)=0.014663182224828;
       x(6,16)=0.497170540556774;
       x(6,17)=0.497170540556774;
       x(6,18)=0.482176322624625;
       x(6,19)=0.482176322624625;
       x(6,20)=0.450239969020782;
       x(6,21)=0.450239969020782;
       x(6,22)=0.400266239377397;
       x(6,23)=0.400266239377397;
       x(6,24)=0.252141267970953;
       x(6,25)=0.252141267970953;
       x(6,26)=0.162047004658461;
       x(6,27)=0.162047004658461;
       x(6,28)=0.075875882260746;
       x(6,29)=0.075875882260746;
       x(6,30)=0.015654726967822;
       x(6,31)=0.015654726967822;
       x(6,32)=0.010186928826919;
       x(6,33)=0.334319867363658;
       x(6,34)=0.334319867363658;
       x(6,35)=0.655493203809423;
       x(6,36)=0.655493203809423;
       x(6,37)=0.135440871671036;
       x(6,38)=0.292221537796944;
       x(6,39)=0.292221537796944;
       x(6,40)=0.572337590532020;
       x(6,41)=0.572337590532020;
       x(6,42)=0.054423924290583;
       x(6,43)=0.319574885423190;
       x(6,44)=0.319574885423190;
       x(6,45)=0.626001190286228;
       x(6,46)=0.626001190286228;
       x(6,47)=0.012868560833637;
       x(6,48)=0.190704224192292;
       x(6,49)=0.190704224192292;
       x(6,50)=0.796427214974071;
       x(6,51)=0.796427214974071;
       x(6,52)=0.067165782413524;
       x(6,53)=0.180483211648746;
       x(6,54)=0.180483211648746;
       x(6,55)=0.752351005937729;
       x(6,56)=0.752351005937729;
       x(6,57)=0.014663182224828;
       x(6,58)=0.080711313679564;
       x(6,59)=0.080711313679564;
       x(6,60)=0.904625504095608;
       x(6,61)=0.904625504095608;

       y(6,1)=0.333333333333333;
       y(6,2)=0.497170540556774;
       y(6,3)=0.482176322624625;
       y(6,4)=0.450239969020782;
       y(6,5)=0.400266239377397;
       y(6,6)=0.252141267970953;
       y(6,7)=0.162047004658461;
       y(6,8)=0.075875882260746;
       y(6,9)=0.015654726967822;
       y(6,10)=0.334319867363658;
       y(6,11)=0.292221537796944;
       y(6,12)=0.319574885423190;
       y(6,13)=0.190704224192292;
       y(6,14)=0.180483211648746;
       y(6,15)=0.080711313679564;
       y(6,16)=0.005658918886452;
       y(6,17)=0.497170540556774;
       y(6,18)=0.035647354750751;
       y(6,19)=0.482176322624625;
       y(6,20)=0.099520061958437;
       y(6,21)=0.450239969020782;
       y(6,22)=0.199467521245206;
       y(6,23)=0.400266239377397;
       y(6,24)=0.495717464058095;
       y(6,25)=0.252141267970953;
       y(6,26)=0.675905990683077;
       y(6,27)=0.162047004658461;
       y(6,28)=0.848248235478508;
       y(6,29)=0.075875882260746;
       y(6,30)=0.968690546064356;
       y(6,31)=0.015654726967822;
       y(6,32)=0.655493203809423;
       y(6,33)=0.010186928826919;
       y(6,34)=0.655493203809423;
       y(6,35)=0.010186928826919;
       y(6,36)=0.334319867363658;
       y(6,37)=0.572337590532020;
       y(6,38)=0.135440871671036;
       y(6,39)=0.572337590532020;
       y(6,40)=0.135440871671036;
       y(6,41)=0.292221537796944;
       y(6,42)=0.626001190286228;
       y(6,43)=0.054423924290583;
       y(6,44)=0.626001190286228;
       y(6,45)=0.054423924290583;
       y(6,46)=0.319574885423190;
       y(6,47)=0.796427214974071;
       y(6,48)=0.012868560833637;
       y(6,49)=0.796427214974071;
       y(6,50)=0.012868560833637;
       y(6,51)=0.190704224192292;
       y(6,52)=0.752351005937729;
       y(6,53)=0.067165782413524;
       y(6,54)=0.752351005937729;
       y(6,55)=0.067165782413524;
       y(6,56)=0.180483211648746;
       y(6,57)=0.904625504095608;
       y(6,58)=0.014663182224828;
       y(6,59)=0.904625504095608;
       y(6,60)=0.014663182224828;
       y(6,61)=0.080711313679564;

%     on first pass, integrate with 1-point rule

      niter=1;
      nsamp=1;
      xp=x(niter,1);
      yp=y(niter,1);
      zsum = w(niter,1)*feval(zfun,xp,yp);

      for nlev=1:5
        rwght=0.25^(nlev-1);
        nterms=4^(nlev-1);

%       on subsequent passes, increase number of samples

        for niter=2:6
   
          nsamp=2*nsamp+1;
          if(niter == 4)
            nsamp=16;
          end
          if(niter == 6)
            nsamp=61;
          end
          zlast=zsum;

%         new calculation -- no sample point reuse

          zsum = 0;
          for n=1:4
            pcell(n)=1;
          end

          for nsum=1:nterms
            for n=1:nsamp
              xp=x(niter,n);
              yp=y(niter,n);
              if(nlev > 1) 
                [xp,yp] = divid2(xp,yp,nlev);
              end
	          zwght=rwght*w(niter,n);
              zsum = zsum + zwght*feval(zfun,xp,yp);
            end

%           update 'pcell' to point to next subcell

            if(nlev > 1)
              pcell(nlev-1)=pcell(nlev-1)+1;
              if(nlev == 5) 
                if(pcell(4) > 4)
	              pcell(4)=1;
	              pcell(3)=pcell(3)+1;
                end
              end
              if(nlev > 3) 
                if(pcell(3) > 4)
	              pcell(3)=1;
	              pcell(2)=pcell(2)+1;
                end
              end
              if(nlev > 2) 
                if(pcell(2) > 4)
	              pcell(2)=1;
	              pcell(1)=pcell(1)+1;
                end
              end
            end
          end

          rtriad=zsum*0.5;

%     check for accuracy -- code returns with minimum of 16-pt rule

          if((abs(zsum) <= aerr) && (niter > 3))
%          if(abs(zsum) <= aerr)
              return
          end
          perr=abs((zsum-zlast)/zsum);
          if(perr <= rerr)
                return
          end
        end

%     did not converge yet, increase level subdivision

        nsamp=1;
      end

      perr=perr*100;
      disp('***  accuracy not met in ztriad with % change = ');
      disp(perr);
      disp('     and value = ');
      disp(rtriad);
      return
end

function[u,v] = divid2(u,v,nlev)
      global pcell;
      ncel=pcell(1);
      if(ncel == 1)
        u=0.5*u;
        v=0.5*v;
      elseif(ncel == 2) 
        u=0.5-0.5*u;
        v=0.5-0.5*v;
      elseif(ncel == 3) 
        u=0.5+0.5*u;
        v=0.5*v;
      else
        u=0.5*u;
        v=0.5+0.5*v;
      end
      if(nlev > 2)
          [u,v] = divid3(u,v,nlev);
      end
      return
end

function[u,v] =  divid3(u,v,nlev)
      global pcell;
      ncel=pcell(2);
      if(ncel == 1) 
        u=0.5*u;
        v=0.5*v;
      elseif(ncel == 2) 
        u=0.5-0.5*u;
        v=0.5-0.5*v;
      elseif(ncel == 3)
        u=0.5+0.5*u;
        v=0.5*v;
      else
        u=0.5*u;
        v=0.5+0.5*v;
      end
      if(nlev > 3) 
          [u,v] = divid4(u,v,nlev);
      end
      return
      end

function[u,v] =  divid4(u,v,nlev)
      global pcell;
      ncel=pcell(3);
      if(ncel == 1) 
        u=0.5*u;
        v=0.5*v;
      elseif(ncel == 2) 
        u=0.5-0.5*u;
        v=0.5-0.5*v;
      elseif(ncel == 3)
        u=0.5+0.5*u;
        v=0.5*v;
      else
        u=0.5*u;
        v=0.5+0.5*v;
      end
      if(nlev > 4) 
          [u,v] = divid5(u,v);
      end
      return
      end

function[u,v] =  divid5(u,v)
      global pcell;
      ncel=pcell(4);
      if(ncel == 1) 
        u=0.5*u;
        v=0.5*v;
      elseif(ncel == 2) 
        u=0.5-0.5*u;
        v=0.5-0.5*v;
      elseif(ncel == 3)
        u=0.5+0.5*u;
        v=0.5*v;
      else
        u=0.5*u;
        v=0.5+0.5*v;
      end
      return
end

